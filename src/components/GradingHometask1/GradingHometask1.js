import React, { Component } from "react";
import { CopyToClipboard } from "react-copy-to-clipboard";
import { isEqual } from "lodash";
import { roundToTwoDecimals } from "../../utils";
import Chart from "chart.js";
import "chartjs-plugin-dragdata";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faChevronRight, faCopy, faUndo } from "@fortawesome/pro-regular-svg-icons";
import { faQuestionCircle } from "@fortawesome/pro-solid-svg-icons";
import "./GradingHometask1.css";

class GradingHometask1 extends Component {
  constructor() {
    super();
    this.state = {
      labels: [
        "Repository management",
        "Project management",
        "git + GitFlow",
        "HTML/CSS/JS",
        "UI/UX",
        "Awesomeness"
      ],
      datasets: [{
        label: "You",
        data: [6, 5, 5, 5, 2, 0],
        dragData: true,
        borderColor: "rgba(0, 173, 238, 1)",
        backgroundColor: "rgba(0, 173, 238, 0.125)",
        pointBorderColor: "white",
        pointBackgroundColor: context => context.dataIndex % 2 === 0 ? "rgb(255, 199, 18)" : "rgb(236, 24, 72)",
        pointHoverBorderColor: "white",
        pointRadius: 5,
        pointHoverRadius: 8,
        pointBorderWidth: 3,
        pointHoverBorderWidth: 3,
        pointHitRadius: 30
      }, {
        label: "Joe Average",
        data: [6, 5, 5, 5, 2, 0],
        dragData: false,
        borderColor: "rgba(0, 0, 0, 0.1)",
        backgroundColor: "rgba(0, 0, 0, 0.05)",
        pointRadius: 0,
        pointHitRadius: 0,
        pointHoverRadius: 0
      }]
    }
    this.createOptions = this.createOptions.bind(this);
    this.resetMyGrades = this.resetMyGrades.bind(this);
  }

  createOptions() {
    return {
      type: "radar",
      data: { ...this.state },
      options: {
        aspectRatio: 1,
        dragData: true,
        dragDataRound: 0,
        onDragEnd: (event, datasetIndex, index, value) => this.setState(state => {
          const newState = { ...state };
          newState.datasets[datasetIndex].data = [
            ...state.datasets[datasetIndex].data.slice(0, index),
            value,
            ...state.datasets[datasetIndex].data.slice(index + 1)
          ];
          return newState;
        }),
        layout: {
          padding: {
            left: 16,
            right: 16,
            top: 16,
            bottom: 16
          }
        },
        legend: {
          display: false
        },
        maintainAspectRatio: false,
        scale: {
          ticks: {
            max: 10,
            min: 0,
            stepSize: 1,
            fontSize: 13,
            fontStyle: "bold",
            fontColor: "#999999"
          },
          pointLabels: {
            fontSize: 16,
            fontStyle: "bold"
          }
        },
        scaleLabel: {
          display: false
        },
        tooltips: {
          enabled: false
        }
      }
    }
  }

  componentDidUpdate() {
    if (this.chart) {
      this.chart.update(this.createOptions());
    } else {
      this.chart = new Chart(this.el.getContext("2d"), this.createOptions());
    }
  }

  resetMyGrades() {
    this.setState(state => {
      const newState = { ...state };
      newState.datasets[0].data = [...state.datasets[1].data];
      return newState;
    });
  }
  
  render() {
    const myGrades = this.state.datasets[0].data;
    const myGradesAverage = myGrades.reduce((memo, value) => memo += value, 0) / myGrades.length;
    const defaultGrades = this.state.datasets[1].data;
    const areMyGradesDefault = isEqual(myGrades, defaultGrades);
    return (
      <div className="grading-hometask">
        <div className="accordion">
          <input type="checkbox" id="grading-hometask" name="accordion-checkbox" hidden />
          <label className="accordion-header" htmlFor="grading-hometask">
            <FontAwesomeIcon icon={faQuestionCircle} />
            <span className="title"><strong>–Ø–∫ –±—É–¥–µ –æ—Ü—ñ–Ω—é–≤–∞—Ç–∏—Å—è –ø—Ä–æ–µ–∫—Ç</strong></span>
            <span className="icon">
              <FontAwesomeIcon icon={faChevronRight} fixedWidth />
            </span>
          </label>
          <div className="accordion-body">
            <div className="radar-chart">
              <canvas ref={el => this.el = el} />
              {
                !areMyGradesDefault &&
                <button className="reset-grades" onClick={this.resetMyGrades}>
                  <FontAwesomeIcon icon={faUndo} className="icon" /> Reset
                </button>
              }
              <CopyToClipboard text={roundToTwoDecimals(myGradesAverage)}>
                <button className="final-grade">
                  {roundToTwoDecimals(myGradesAverage)}
                  <FontAwesomeIcon icon={faCopy} className="icon" />
                </button>
              </CopyToClipboard>
            </div>
            <p>–ü—Ä–æ–µ–∫—Ç –±—É–¥–µ –æ—Ü—ñ–Ω—é–≤–∞—Ç–∏—Å—è –ø–æ —à–µ—Å—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö </p>
            <div class="accordion">
              <input type="checkbox" id="accordion-1" name="accordion-checkbox" hidden />
              <label class="accordion-header" for="accordion-1">
                <i class="icon icon-arrow-right mr-1"></i>
                <h6>Repository management</h6>
              </label>
              <div class="accordion-body">
                –†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π —Å—Ç–≤–æ—Ä–µ–Ω–∏–π, —Ç–æ–ø—ñ–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ, README.md –Ω–∞ –º—ñ—Å—Ü—ñ, –∞ GitHub Pages —É–≤—ñ–º–∫–Ω–µ–Ω–æ. –ö–ª—ñ–∫–Ω—É—Ç–∏ –Ω–∞ –ª—ñ–Ω–∫ –∑–∞–≤–∂–¥–∏ –ª–µ–≥—à–µ, –∞–Ω—ñ–∂ —Å–∫–∞—á—É–≤–∞—Ç–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π —ñ –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ —Ñ–∞–π–ª –Ω–∞ –≤–ª–∞—Å–Ω–æ–º—É –∫–æ–º–ø'—é—Ç–µ—Ä—ñ. –©–∏—Ä–æ –¥—è–∫—É—î–º–æ —Ç–∏–º, —Ö—Ç–æ –ø–æ–¥–∞—Ä—É—î –ø–µ—Ä–µ–≤—ñ—Ä—è—é—á–æ–º—É —Ç–∞–∫—É –∑—Ä—É—á–Ω—ñ—Å—Ç—å.
              </div>
            </div>


            <ul>
              <li>
                <h6>Repository management</h6>
                <div>
                  –†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π —Å—Ç–≤–æ—Ä–µ–Ω–∏–π, —Ç–æ–ø—ñ–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ, README.md –Ω–∞ –º—ñ—Å—Ü—ñ, –∞ GitHub Pages —É–≤—ñ–º–∫–Ω–µ–Ω–æ. –ö–ª—ñ–∫–Ω—É—Ç–∏ –Ω–∞ –ª—ñ–Ω–∫ –∑–∞–≤–∂–¥–∏ –ª–µ–≥—à–µ, –∞–Ω—ñ–∂ —Å–∫–∞—á—É–≤–∞—Ç–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π —ñ –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ —Ñ–∞–π–ª –Ω–∞ –≤–ª–∞—Å–Ω–æ–º—É –∫–æ–º–ø'—é—Ç–µ—Ä—ñ. –©–∏—Ä–æ –¥—è–∫—É—î–º–æ —Ç–∏–º, —Ö—Ç–æ –ø–æ–¥–∞—Ä—É—î –ø–µ—Ä–µ–≤—ñ—Ä—è—é—á–æ–º—É —Ç–∞–∫—É –∑—Ä—É—á–Ω—ñ—Å—Ç—å.
                </div>
              </li>
              <li>
                <h6>Project management</h6>
                <div>
                  –ü—Ä–æ–µ–∫—Ç–∏ –∑–∞–≤–µ–¥–µ–Ω—ñ, —Ç–∞—Å–∫–∏ –≤–µ–¥—É—Ç—å—Å—è, –∞ –ø—Ä–æ–±–ª–µ–º–∏ –æ–ø–∏—Å—É—é—Ç—å—Å—è. –í–º—ñ–Ω–Ω—è –¥–æ–±—Ä–µ —Å–∫–ª–∞–¥–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è, —á—ñ—Ç–∫–æ –æ–ø–∏—Å—É–≤–∞—Ç–∏ –ø—Ä–æ–±–ª–µ–º–∏, –∑–≤—ñ—Ç—É–≤–∞—Ç–∏ –ø—Ä–æ —ó—Ö –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –¥–æ–ø–æ–º–æ–∂—É—Ç—å –∑–Ω–∞–π—Ç–∏ —Å–ø—ñ–ª—å–Ω—É –º–æ–≤—É –∑ –ø—Ä–æ–¥–∂–µ–∫—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∑–∞–º–æ–≤–Ω–∏–∫–∞, —è–∫—â–æ —Å—Ç—É–¥–µ–Ω—Ç –∫–æ–ª–∏-–Ω–µ–±—É–¥—å –±—É–¥–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –≤ –∞—É—Ç—Å–æ—Ä—Å—ñ –∞–±–æ —Ñ—Ä—ñ–ª–∞–Ω—Å—ñ (–∞ –∫–æ–ª–∏-–Ω–µ–±—É–¥—å –≤—ñ–Ω –±—É–¥–µ). –í —Å–≤—ñ—Ç—ñ open source –±—ñ–ª—å—à—ñ—Å—Ç—å –∫–æ—Ä–∏—Å–Ω–∏—Ö —Ä–æ–∑–º–æ–≤ —Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —â–æ–¥–æ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —è–∫—Ä–∞–∑ –≤ Issues, —Ç–æ–º—É —Ä–æ–∑—É–º—ñ—Ç–∏ —è–∫ —Ü–µ –ø—Ä–∞—Ü—é—î ‚Äî –∑–∞–ø–æ—Ä—É–∫–∞ —É—Å–ø—ñ—Ö—É. –¢–µ–ø–µ—Ä —Ü–µ –≤–∞—à Google (–Ω—É, –º–æ–∂–µ —â–µ —Ç—Ä–æ—à–∫–∏ StackOverflow). Google –≤—Å–µ —â–µ –∫–æ—Ä–∏—Å–Ω–∏–π –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ —Å—Ç–∞—Ä—Ç—É —Ä–æ–±–æ—Ç–∏ –∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—î—é, –∞–ª–µ –∫–æ–ª–∏ —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫, —Ç–æ —à—É–∫–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É —Ç—Ä–µ–±–∞ –±–ª–∏–∂—á–µ –¥–æ –∫–æ–¥—É —Ç–æ—ó —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó —ñ —ó—ó –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó, –∞ –≤–∂–µ –ø–æ—Ç—ñ–º –ø–æ –≤—Å—ñ–π –º–µ—Ä–µ–∂—ñ.
                </div>
              </li>
              <li>
                <h6><code>git</code> + GitFlow</h6>
                <div>
                  –†–æ–±–æ—Ç–∞ –≤–µ–¥–µ—Ç—å—Å—è –≤ –¥–µ–∫—ñ–ª—å–∫–æ—Ö –≥—ñ–ª–∫–∞—Ö, –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ–∂–Ω–æ—ó –∑ —è–∫–∏—Ö —ñ–Ω—Ç—É—ó—Ç–∏–≤–Ω–æ –∑—Ä–æ–∑—É–º—ñ–ª–µ, –∞ –¥–ª—è —ó—Ö –∑–ª–∏—Ç—Ç—è —É –æ—Å–Ω–æ–≤–Ω—É –≥—ñ–ª–∫—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è pull request-–∏. –†–æ–∑–¥—ñ–ª—è—é—á–∏ —Å–≤–æ—é —Ä–æ–±–æ—Ç—É –Ω–∞ –±–∞–≥–∞—Ç–æ –≥—ñ–ª–æ–∫, –º–æ–∂–Ω–∞ —à–≤–∏–¥–∫–æ —ñ –≤–ø—Ä–∞–≤–Ω–æ –≤–∏–ø—Ä–∞–≤–ª—è—Ç–∏ –±–∞–≥–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ, –º–∞—Ç–∏ –æ–∫—Ä–µ–º–æ —Å—Ç–∞–±—ñ–ª—å–Ω—É –≤–µ—Ä—Å—ñ—é (<code>release</code>), —è–∫–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ —Ä–µ–ª—ñ–∑—É (—à–ª—è—Ö–æ–º –∑–ª–∏—Ç—Ç—è –≤ <code>master</code>), –∞ —Ç–∞–∫–æ–∂ —â–µ –≤–µ—Ä—Å—ñ—é, –≤ —è–∫—ñ–π –≤–µ–¥–µ—Ç—å—Å—è –æ—Å–Ω–æ–≤–Ω–∞ —Ä–æ–∑—Ä–æ–±–∫–∞ (<code>develop</code>). –ê –≤ —î–¥–∏–Ω—ñ–π –≥—ñ–ª—Ü—ñ –Ω—î. –ú–µ—Ä–¥–∂—ñ—Ç—å —Å–≤–æ—ó –≥—ñ–ª–∫–∏ pull request-–∞–º–∏, –±–æ —Ç–∞–∫ —Ç—Ä–µ–±–∞. –Ü –ø–æ—Ç—ñ–º, —Ç–∞–∫ –º–æ–∂–Ω–∞ —á–∞—Å—Ç–∫–æ–≤–æ –∑–Ω—è—Ç–∏ –∑ —Å–µ–±–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å, –∞–¥–∂–µ —Ç–æ–π, —Ö—Ç–æ approve-–Ω—É–≤ –ø–æ–≥–∞–Ω–∏–π –∫–æ–¥, –¥–æ–ø—É—Å—Ç–∏–≤ –Ω–µ –º–µ–Ω—à—É –ø–æ–º–∏–ª–∫—É, –∞–Ω—ñ–∂ —Ç–æ–π, —Ö—Ç–æ –π–æ–≥–æ –Ω–∞–ø–∏—Å–∞–≤ üòÅ.
                </div>
              </li>
              <li>
                <h6>HTML/CSS/JS</h6>
                <div>
                  Copy-pasting skills. –í–∞–ª—ñ–¥–Ω–∞ HTML-—Ä–æ–∑–º—ñ—Ç–∫–∞ ‚Äï —Ü–µ –Ω–µ —Ç–∞–∫ –≤–∂–µ –π —Å–∫–ª–∞–¥–Ω–æ. –ù–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –Ω–∞ –≤—Å—ñ 100%, –¥–µ—Å—å —Ç—É—Ç —ñ —Ç–∞–º –≤–∞–ª—ñ–¥–∞—Ç–æ—Ä –º–æ–∂–µ –º–∞—Ç–∏ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è —ñ —Ü–µ –æ–∫–µ–π. –ú–∞—Ç–∏ —Ö–æ—Ä–æ—à–∏–π CSS –º–æ–∂–Ω–∞ –ª–∏—à —É –≤–∏–ø–∞–¥–∫—É, —è–∫—â–æ –≤–º—ñ—Ç–∏ –π–æ–≥–æ –ø–∏—Å–∞—Ç–∏, –∞–±–æ —è–∫—â–æ –π–æ–≥–æ –Ω–∞–ø–∏—Å–∞–≤ —Ö—Ç–æ—Å—å —ñ–Ω—à–∏–π, —Ö—Ç–æ –≤–º—ñ—î. –¢–∞–∫–∏–º —á–∏–Ω–æ–º, –≤–∞—Ä—Ç–æ –¥–æ–ø–æ–≤–Ω—é–≤–∞—Ç–∏ CSS —ñ–∑ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É —Ç–∞–∫–∏–º–∏ —Å–≤–æ—ó–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏, —É —è–∫–∏—Ö –≤–ø–µ–≤–Ω–µ–Ω—ñ. –ü–µ—Ä–µ–±–∏–≤–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ `!important`, –Ω–µ –±—É–¥–µ –≤–≤–∞–∂–∞—Ç–∏—Å—å –∑–∞ –ø–æ–º–∏–ª–∫—É, –∞–ª–µ –ø–æ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ —Ç–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü—ñ–π —Ç–µ–∂ –±—É–ª–æ –± –≤–∞—Ä—Ç–æ —É–Ω–∏–∫–∞—Ç–∏.
                </div>
              </li>
              <li>
                <h6>UI/UX</h6>
                <div>–ú–µ—Ç–æ—é –ø—Ä–æ–µ–∫—Ç—É —î –∑—Ä–æ–±–∏—Ç–∏ –¥–æ–º–∞—à–Ω—é —Å—Ç–æ—Ä—ñ–Ω–∫—É ‚Äî –¥–æ—Å—Ç—É–ø–Ω—É, —ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—É, –∑—Ä—É—á–Ω—É, —á–∏—Ç–∞–±–µ–ª—å–Ω—É. –ë–æ–Ω—É—Å–∏ –Ω–∞—Ä–∞—Ö–æ–≤—É—é—Ç—å—Å—è —Ç–∏–º, —Ö—Ç–æ –∑–º—ñ–≥. –Ü —â–µ –æ–¥–∏–Ω –æ—Å—Ç–∞–Ω–Ω—ñ–π –±–∞–ª –¥–ª—è —Ç–∏—Ö, —É –∫–æ–≥–æ —Ü–µ –≤—Å–µ —â–µ –π –≥–∞—Ä–Ω–æ –≤–∏–≥–ª—è–¥–∞—î.</div>
              </li>
              <li>
                <h6>Awesomeness</h6>
                <div>Creativity, attention to details, humour</div>
              </li>
            </ul>
          </div>
        </div>
      </div>
    );
  }
}

export default GradingHometask1;